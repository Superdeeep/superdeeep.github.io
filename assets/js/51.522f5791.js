(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{429:function(t,n,s){"use strict";s.r(n);var e=s(1),a=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("这里将会记录传统的win32程序的历程")]),t._v(" "),n("p",[t._v("Windows的数据结构")]),t._v(" "),n("p",[t._v("文档：https://learn.microsoft.com/zh-cn/windows/win32/winprog/windows-data-types")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("WINAPI\t\n系统函数的调用约定。\n\n此类型在 WinDef.h 中声明，如下所示：\n\n#define WINAPI __stdcall\n\nCALLBACK、 WINAPI 和 APIENTRY 都用于定义具有__stdcall调用约定的函数。 Windows API 中的大多数函数都是使用 WINAPI 声明的。 你可能希望对实现的回调函数使用 CALLBACK ，以帮助将函数标识为回调函数。\n\n古怪的WINAPI\nhttps://www.codeproject.com/Articles/1388/Calling-Conventions-Demystified\n\nwhat does WINAPI stand for？？？？\nhttps://stackoverflow.com/questions/13463346/what-does-winapi-stand-for\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("HWND\t\n窗口的句柄。\n\n此类型在 WinDef.h 中声明，如下所示：\n\ntypedef HANDLE HWND;\n")])])]),n("p",[t._v("多标签页可能有用的参考链接https://blog.csdn.net/qq_31178679/article/details/125947250")])])}),[],!1,null,null,null);n.default=a.exports}}]);